using DifferentMethods.React;
using UnityEngine;
[USING]

namespace React.Generated {

    /// <summary>
    /// Executes child if result of [NICENAME] on the active gameObject is true.
    /// </summary>
    [ATTRIBUTES]
    [System.Serializable]
    public class [CLASSNAME] : DecoratorNode
    {
[FIELDS]

        [COMPONENTTYPE] Component;

        protected override NodeState Execute() 
        {
            if([CODE]) 
                return ExecuteNode(Child);
            return NodeState.NoResult;
        }

        public override void OnEnable() {
            base.OnEnable();
            Component = Reactor.GetComponent<[COMPONENTTYPE]>();
            [ONENABLE_CODE]
        }

        public override string ToString() => NiceName();
        public static string NiceName() => "IF [NICENAME]";
        public static string GetMenuPath() => "[MENUPATH]";
        public static string Signature() => "[SIGNATURE]";
        public override System.Type GetWrappedType() => typeof([COMPONENTTYPE]);

    }
}
